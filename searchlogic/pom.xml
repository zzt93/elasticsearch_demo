<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>search</artifactId>
    <groupId>cn.superid</groupId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>searcher</artifactId>

  <properties>
    <maven.deploy.skip>true</maven.deploy.skip>
    <spring.consul.version>2.0.0.M1</spring.consul.version>
    <docker.skip.build>false</docker.skip.build>
    <docker.image.prefix>192.168.1.202/library</docker.image.prefix>
    <maven.docker.version>0.4.14</maven.docker.version>
    <spring-cloud.version>2.0.0.M1</spring-cloud.version>
  </properties>

  <repositories>
    <repository>
      <id>all</id>
      <name>all</name>
      <url>http://192.168.1.100:8081/artifactory/all</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>all</id>
      <name>all</name>
      <url>http://192.168.1.100:8081/artifactory/all</url>
    </pluginRepository>
  </pluginRepositories>
  <distributionManagement>
    <snapshotRepository>
      <id>snapshots</id>
      <name>simu-server-snapshots</name>
      <url>http://192.168.1.100:8081/artifactory/all</url>
    </snapshotRepository>
  </distributionManagement>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.data</groupId>
          <artifactId>spring-data-elasticsearch</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-elasticsearch</artifactId>
      <version>3.0.0.RC2.fix-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>


    <dependency>
      <groupId>cn.superid</groupId>
      <artifactId>search-entity</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>

    <!-- Runtime, for Embedded Elasticsearch,
            comment this if connect to external elastic search server-->
    <!--<dependency>-->
    <!--<groupId>net.java.dev.jna</groupId>-->
    <!--<artifactId>jna</artifactId>-->
    <!--<scope>runtime</scope>-->
    <!--</dependency>-->
    <!-- Test -->

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>22.0</version>
    </dependency>

    <!-- add the x-pack jar as a dependency -->
    <dependency>
      <groupId>org.elasticsearch.client</groupId>
      <artifactId>x-pack-transport</artifactId>
      <version>${es.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-consul-discovery</artifactId>
      <version>${spring.consul.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>jsr311-api</artifactId>
          <groupId>javax.ws.rs</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-stream-rabbit</artifactId>
      <version>${spring-cloud.version}</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <!-- Package as an executable jar/war -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${maven.docker.version}</version>
        <!--插件绑定到phase-->
        <executions>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!--配置变量，包括是否build、imageName、imageTag，非常灵活-->
          <skipDocker>${docker.skip.build}</skipDocker>
          <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
          <!--最后镜像产生了两个tag，版本和和最新的-->
          <imageTags>
            <imageTag>${project.version}</imageTag>
            <imageTag>latest</imageTag>
          </imageTags>
          <forceTags>true</forceTags>
          <env>
            <TZ>Asia/Shanghai</TZ>
          </env>
          <!--时区配置-->
          <runs>
            <run>ln -snf /usr/share/zoneinfo/$TZ /etc/localtime</run>
            <run>echo $TZ > /etc/timezone</run>
          </runs>
          <dockerDirectory>${project.basedir}</dockerDirectory>
          <resources>
            <resource>
              <targetPath>/</targetPath>
              <directory>${project.build.directory}</directory>
              <include>${project.build.finalName}.jar</include>
            </resource>
          </resources>
          <!--push到私有的hub-->
          <serverId>docker-registry</serverId>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>